{%- if flavor contains "vanilla-js" -%}
import { describe, it, expect } from 'vitest';
import { run } from './run';

/**
 * @typedef {import("../generated/api").CartFulfillmentGroupsLocationRankingsGenerateRunResult} CartFulfillmentGroupsLocationRankingsGenerateRunResult
 */

describe('order routing location rule function', () => {
  it('returns rank operations with all locations rank 0', () => {
    const result = run({
      "fulfillmentGroups": [{
          "handle": "123",
          "inventoryLocationHandles": ["456"]
      }]
    });
    const expected = /** @type {CartFulfillmentGroupsLocationRankingsGenerateRunResult} */ ({
      operations: [{
        fulfillment_group_location_ranking_add {
          fulfillmentGroupHandle: "123",
          rankings: [{
            locationHandle: "456",
            rank: 0
          }]
        }
      }]
    });

    expect(result).toEqual(expected);
  });
});
{%- elsif flavor contains "typescript" -%}
import { describe, it, expect } from 'vitest';
import { run } from './run';
import { CartFulfillmentGroupsLocationRankingsGenerateRunResult } from '../generated/api';

describe('order routing location rule function', () => {
  it('returns rank operations with all locations rank 0', () => {
    const result = run({
      fulfillmentGroups: [{
          handle: "123",
          inventoryLocationHandles: ["456"]
      }]
    });
    const expected: CartFulfillmentGroupsLocationRankingsGenerateRunResult = {
      operations: [{
        fulfillment_group_location_ranking_add {
          fulfillmentGroupHandle: "123",
          rankings: [{
            locationHandle: "456",
            rank: 0
          }]
        }
      }]
    };

    expect(result).toEqual(expected);
  });
});
{%- endif -%}
